{
  "version": 3,
  "file": "ngx-viewport.umd.min.js",
  "sources": [
    "ng://ngx-viewport/out/src/app/modules/ngx-in-viewport/window-token.module.ts",
    "ng://ngx-viewport/out/src/app/modules/ngx-in-viewport/ngx-in-viewport.service.ts",
    "ng://ngx-viewport/out/src/app/modules/ngx-in-viewport/ngx-in-viewport.directive.ts",
    "ng://ngx-viewport/out/src/app/modules/ngx-in-viewport/ngx-in-viewport.module.ts"
  ],
  "sourcesContent": [
    "import { NgModule } from '@angular/core';\nimport { InjectionToken } from '@angular/core';\n\nexport const WINDOW = new InjectionToken<any>('WindowToken');\n\nexport function _window(): any {\n  return typeof window !== 'undefined' && window ? window : {};\n}\n\n@NgModule({\n  providers: [{\n    provide: WINDOW,\n    useFactory: _window\n  }]\n})\nexport class WindowTokenModule { }\n",
    "import { Inject, Injectable } from '@angular/core';\nimport { WINDOW } from './window-token.module';\nimport { DOCUMENT } from '@angular/common';\n\ninterface Handler {\n  element: HTMLElement;\n  listener: any;\n}\n\n@Injectable()\nexport class NgxInViewportService {\n  private handlers: Handler[] = [];\n\n  constructor(\n    @Inject(WINDOW) private window: any,\n    @Inject(DOCUMENT) private document: any,\n  ) { }\n\n  addDetectListener(element: HTMLElement, inViewportHandler: () => void) {\n    if (!this.window || !element || !inViewportHandler) return;\n\n    const handler: Handler = {\n      listener: () => this.elementOnViewport(element, inViewportHandler),\n      element: element,\n    };\n\n    this.elementOnViewport(element, inViewportHandler); // need when page has been loaded\n    this.window.addEventListener('scroll', handler.listener);\n\n    this.handlers.push(handler);\n  }\n\n  removeDetectListener(element: HTMLElement) {\n    const handler = this.handlers.find(h => h.element === element);\n    this.window.removeEventListener('scroll', handler.listener);\n  }\n\n  private elementOnViewport(element: HTMLElement, inViewportHandler: () => void) {\n    if (this.isElementOnViewport(element)) inViewportHandler();\n  }\n\n  private isElementOnViewport(element: HTMLElement): boolean {\n    if (!this.window || !this.document) return;\n\n    const clientRect: ClientRect = element.getBoundingClientRect();\n    return !!clientRect &&\n      clientRect.top <= this.document.body.clientHeight &&\n      clientRect.left <= this.document.body.clientWidth &&\n      clientRect.bottom >= 0 &&\n      clientRect.right >= 0;\n  }\n}\n",
    "import { AfterViewInit, Directive, ElementRef, EventEmitter, OnDestroy, Output } from '@angular/core';\nimport { NgxInViewportService } from './ngx-in-viewport.service';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[in-viewport]'\n})\nexport class InViewportDirective implements AfterViewInit, OnDestroy {\n  @Output() inViewportAction = new EventEmitter();\n\n  constructor(private inViewportService: NgxInViewportService, private element: ElementRef) { }\n\n  ngAfterViewInit() {\n    this.inViewportService\n      .addDetectListener(this.element.nativeElement, () => this.inViewportAction.emit());\n  }\n\n  ngOnDestroy() {\n    this.inViewportService.removeDetectListener(this.element.nativeElement);\n  }\n}\n",
    "import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InViewportDirective } from './ngx-in-viewport.directive';\nimport { NgxInViewportService } from './ngx-in-viewport.service';\nimport { WindowTokenModule } from './window-token.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    WindowTokenModule,\n  ],\n  declarations: [\n    InViewportDirective,\n  ],\n  exports: [\n    InViewportDirective,\n  ],\n})\nexport class InViewportModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: InViewportModule,\n      providers: [\n        NgxInViewportService,\n      ],\n    };\n  }\n}\n"
  ],
  "names": [
    "WINDOW",
    "InjectionToken",
    "_window",
    "window",
    "WindowTokenModule",
    "type",
    "NgModule",
    "args",
    "providers",
    "provide",
    "useFactory",
    "NgxInViewportService",
    "document",
    "this",
    "handlers",
    "prototype",
    "addDetectListener",
    "element",
    "inViewportHandler",
    "_this",
    "handler",
    "listener",
    "elementOnViewport",
    "addEventListener",
    "push",
    "removeDetectListener",
    "find",
    "h",
    "removeEventListener",
    "isElementOnViewport",
    "clientRect",
    "getBoundingClientRect",
    "top",
    "body",
    "clientHeight",
    "left",
    "clientWidth",
    "bottom",
    "right",
    "Injectable",
    "undefined",
    "decorators",
    "Inject",
    "DOCUMENT",
    "InViewportDirective",
    "inViewportService",
    "inViewportAction",
    "EventEmitter",
    "ngAfterViewInit",
    "nativeElement",
    "emit",
    "ngOnDestroy",
    "Directive",
    "selector",
    "ElementRef",
    "Output",
    "InViewportModule",
    "forRoot",
    "ngModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "iUAAA,IAGaA,EAAS,IAAIC,EAAAA,eAAoB,eAE9C,SAAAC,IACE,MAAyB,oBAAXC,QAA0BA,OAASA,OAAS,GAS5D,IAAAC,EAAA,2BANA,CAAAC,KAACC,EAAAA,SAADC,KAAA,CAAU,CACRC,UAAW,CAAC,CACVC,QAAST,EACTU,WAAYR,QCZhB,IAAAS,EAAA,WAaE,SAAFA,EAC4BR,EACES,GADFC,KAA5BV,OAA4BA,EACEU,KAA9BD,SAA8BA,EAJ9BC,KAAAC,SAAgC,UAO9BH,EAAFI,UAAAC,kBAAE,SAAkBC,EAAsBC,GAAxC,IAAFC,EAAAN,KACI,GAAKA,KAAKV,QAAWc,GAAYC,EAAjC,CAEA,IAAME,EAAmB,CACvBC,SAAU,WAAM,OAAAF,EAAKG,kBAAkBL,EAASC,IAChDD,QAASA,GAGXJ,KAAKS,kBAAkBL,EAASC,GAChCL,KAAKV,OAAOoB,iBAAiB,SAAUH,EAAQC,UAE/CR,KAAKC,SAASU,KAAKJ,KAGrBT,EAAFI,UAAAU,qBAAE,SAAqBR,GACnB,IAAMG,EAAUP,KAAKC,SAASY,KAAK,SAAAC,GAAK,OAAAA,EAAEV,UAAYA,IACtDJ,KAAKV,OAAOyB,oBAAoB,SAAUR,EAAQC,WAG5CV,EAAVI,UAAAO,kBAAU,SAAkBL,EAAsBC,GAC1CL,KAAKgB,oBAAoBZ,IAAUC,KAGjCP,EAAVI,UAAAc,oBAAU,SAAoBZ,GAC1B,GAAKJ,KAAKV,QAAWU,KAAKD,SAA1B,CAEA,IAAMkB,EAAyBb,EAAQc,wBACvC,QAASD,GACPA,EAAWE,KAAOnB,KAAKD,SAASqB,KAAKC,cACrCJ,EAAWK,MAAQtB,KAAKD,SAASqB,KAAKG,aACjB,GAArBN,EAAWO,QACS,GAApBP,EAAWQ,UAjDjB,iBASA,CAAAjC,KAACkC,EAAAA,gDAKD,CAAAlC,KAAAmC,UAAAC,WAAA,CAAA,CAAApC,KAAKqC,EAAAA,OAALnC,KAAA,CAAYP,MACZ,CAAAK,KAAAmC,UAAAC,WAAA,CAAA,CAAApC,KAAKqC,EAAAA,OAALnC,KAAA,CAAYoC,EAAAA,eCfZ,IAAAC,EAAA,WAUE,SAAFA,EAAsBC,EAAiD5B,GAAjDJ,KAAtBgC,kBAAsBA,EAAiDhC,KAAvEI,QAAuEA,EAFvEJ,KAAAiC,iBAA+B,IAAIC,EAAAA,oBAIjCH,EAAF7B,UAAAiC,gBAAE,WAAA,IAAF7B,EAAAN,KACIA,KAAKgC,kBACF7B,kBAAkBH,KAAKI,QAAQgC,cAAe,WAAM,OAAA9B,EAAK2B,iBAAiBI,UAG/EN,EAAF7B,UAAAoC,YAAE,WACEtC,KAAKgC,kBAAkBpB,qBAAqBZ,KAAKI,QAAQgC,kBAlB7D,iBAGA,CAAA5C,KAAC+C,EAAAA,UAAD7C,KAAA,CAAW,CAET8C,SAAU,uDAJZ,CAAAhD,KAASM,GADT,CAAAN,KAAmCiD,EAAAA,gCAQnCR,iBAAA,CAAA,CAAAzC,KAAGkD,EAAAA,UCRH,IAAAC,EAAA,WAAA,SAAAA,YAoBSA,EAATC,QAAE,WACE,MAAO,CACLC,SAAUF,EACVhD,UAAW,CACTG,OAxBR,iBAOA,CAAAN,KAACC,EAAAA,SAADC,KAAA,CAAU,CACRoD,QAAS,CACPC,EAAAA,aACAxD,GAEFyD,aAAc,CACZjB,GAEFkB,QAAS,CACPlB"
}
